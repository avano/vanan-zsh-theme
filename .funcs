path() {
        ARG=${1:-.}
        realpath ${ARG} | tr -d '\n' | xclip -selection c
}
copy() {
        ARG=${1:-.}
        cat ${ARG} | xclip -selection c
}
rebase() {
        CURRENT=$(git rev-parse --abbrev-ref HEAD)
        git checkout $1 || { echo 'Branch checkout failed' ; return }
        git pull --rebase || { echo 'Pull failed' ; return }
        git checkout ${CURRENT} || { echo 'Branch checkout failed' ; return }
        git rebase $1 || { echo 'Rebase failed' ; return }
}
merge-to() {
		CURRENT=$(git rev-parse --abbrev-ref HEAD)
		if [ "${CURRENT}" = "$1" ]; then
			echo "Can't merge to this branch"
			return
		fi
		git checkout $1 || { echo 'Branch checkout failed' ; return }
		git pull --rebase || { echo 'Pull failed' ; return }
		git merge --no-ff ${CURRENT} || { echo 'Merge failed' ; return }
}

sedgrep() {
	grep -rl "$1" . | xargs sed -i "s#$1#$2#g"
}

refresh_token() {
	oc login -u developer -p developer https://192.168.99.100:8443
	TOKEN=`oc whoami -t`
	sed -i "s#syndesis.config.openshift.token.*#syndesis.config.openshift.token=$TOKEN#g" $GITHUB/syndesis-qe/test.properties
}
